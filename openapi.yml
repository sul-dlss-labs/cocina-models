openapi: 3.0.0
info:
  description: Specification for Cocina Models
  version: 1.0.0
  title: Cocina Models
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /validate/DRO:
    post:
      summary: Validate a DRO
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DRO'
      responses:
        '200':
          description: noop
  /validate/RequestDRO:
    post:
      summary: Validate a Request DRO
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestDRO'
      responses:
        '200':
          description: noop
  /validate/Collection:
    post:
      summary: Validate a Collection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
      responses:
        '200':
          description: noop
  /validate/RequestCollection:
    post:
      summary: Validate a Request Collection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCollection'
      responses:
        '200':
          description: noop
  /validate/AdminPolicy:
    post:
      summary: Validate an AdminPolicy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminPolicy'
      responses:
        '200':
          description: noop
  /validate/RequestAdminPolicy:
    post:
      summary: Validate a Request AdminPolicy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestAdminPolicy'
      responses:
        '200':
          description: noop

components:
  schemas:
    Access:
      description: Access metadata
      type: object
      properties:
        access:
          description: Access level
          type: string
          enum:
            - 'world'
            - 'stanford'
            - 'location-based'
            - 'citation-only'
            - 'dark'
          default: 'dark'
    Administrative:
      type: object
      properties:
        hasAdminPolicy:
          $ref: '#/components/schemas/Druid'
        releaseTags:
          description: Tags for release
          type: array
          items:
            $ref: '#/components/schemas/ReleaseTag'
        partOfProject:
          description: Administrative or Internal project this resource is a part of
          example: Google Books
          type: string
    AdminPolicy:
      type: object
      properties:
        type:
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/admin_policy.jsonld'
          example: item
        externalIdentifier:
          $ref: '#/components/schemas/Druid'
        label:
          type: string
        version:
          type: integer
        administrative:
          $ref: '#/components/schemas/AdminPolicyAdministrative'
        description:
          $ref: '#/components/schemas/Description'
      required:
        - externalIdentifier
        - label
        - type
        - version
        - administrative
    AdminPolicyAdministrative:
      type: object
      properties:
        defaultObjectRights:
          type: string
          default: <?xml version="1.0" encoding="UTF-8"?><rightsMetadata><access type="discover"><machine><world/></machine></access><access type="read"><machine><world/></machine></access><use><human type="useAndReproduction"/><human type="creativeCommons"/><machine type="creativeCommons" uri=""/><human type="openDataCommons"/><machine type="openDataCommons" uri=""/></use><copyright><human/></copyright></rightsMetadata>
        registrationWorkflow:
          type: string
        hasAdminPolicy:
          type: string
    CatalogLink:
      type: object
      required:
        - catalog
        - catalogRecordId
      properties:
        catalog:
          description: Catalog that is the source of the linked record.
          type: string
          example: symphony
        catalogRecordId:
          description: Record identifier that is unique within the context of the linked record's catalog.
          type: string
          example: 11403803
    Collection:
      description: A group of Digital Repository Objects that indicate some type of conceptual grouping within the domain that is worth reusing across the system.
      type: object
      properties:
        type:
          description: The content type of the Collection. Selected from an established set of values.
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/collection.jsonld'
            - 'http://cocina.sul.stanford.edu/models/curated-collection.jsonld'
            - 'http://cocina.sul.stanford.edu/models/user-collection.jsonld'
            - 'http://cocina.sul.stanford.edu/models/exhibit.jsonld'
            - 'http://cocina.sul.stanford.edu/models/series.jsonld'
          example: item
        externalIdentifier:
          $ref: '#/components/schemas/Druid'
        label:
          description: Primary processing label (can be same as title) for a Collection.
          type: string
        version:
          description: Version for the Collection within SDR.
          type: integer
        access:
          $ref: '#/components/schemas/Access'
        administrative:
          $ref: '#/components/schemas/Administrative'
        description:
          $ref: '#/components/schemas/Description'
        identification:
          $ref: '#/components/schemas/CollectionIdentification'
      required:
        - externalIdentifier
        - label
        - type
        - version
        - access
    CollectionIdentification:
      type: object
      properties:
        catalogLinks:
          type: array
          items:
            $ref: '#/components/schemas/CatalogLink'
    Description:
      description: Descriptive metadata
      type: object
      properties:
        title:
          type: array
          items:
            $ref: '#/components/schemas/Title'
      required:
        - title
    DRO:
      description: Domain-defined abstraction of a 'work'. Digital Repository Objects' abstraction is describable for our domainâ€™s purposes, i.e. for management needs within our system.
      type: object
      properties:
        type:
          description: The content type of the DRO. Selected from an established set of values.
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/object.jsonld'
            - 'http://cocina.sul.stanford.edu/models/3d.jsonld'
            - 'http://cocina.sul.stanford.edu/models/agreement.jsonld'
            - 'http://cocina.sul.stanford.edu/models/book.jsonld'
            - 'http://cocina.sul.stanford.edu/models/document.jsonld'
            - 'http://cocina.sul.stanford.edu/models/geo.jsonld'
            - 'http://cocina.sul.stanford.edu/models/image.jsonld'
            - 'http://cocina.sul.stanford.edu/models/page.jsonld'
            - 'http://cocina.sul.stanford.edu/models/photograph.jsonld'
            - 'http://cocina.sul.stanford.edu/models/manuscript.jsonld'
            - 'http://cocina.sul.stanford.edu/models/map.jsonld'
            - 'http://cocina.sul.stanford.edu/models/media.jsonld'
            - 'http://cocina.sul.stanford.edu/models/track.jsonld'
            - 'http://cocina.sul.stanford.edu/models/webarchive-binary.jsonld'
            - 'http://cocina.sul.stanford.edu/models/webarchive-seed.jsonld'
          example: item
        externalIdentifier:
          $ref: '#/components/schemas/Druid'
        label:
          description: Primary processing label (can be same as title) for a DRO.
          type: string
        version:
          description: Version for the DRO within SDR.
          type: integer
        access:
          $ref: '#/components/schemas/DROAccess'
        administrative:
          $ref: '#/components/schemas/Administrative'
        description:
          $ref: '#/components/schemas/Description'
        identification:
          $ref: '#/components/schemas/Identification'
        structural:
          $ref: '#/components/schemas/DROStructural'
        geographic:
          $ref: '#/components/schemas/Geographic'
      required:
        - externalIdentifier
        - label
        - type
        - version
        - access
    DROAccess:
      type: object
      properties:
        access:
          type: string
          enum:
            - 'world'
            - 'stanford'
            - 'location-based'
            - 'citation-only'
            - 'dark'
          default: 'dark'
        copyright:
          description: The human readable copyright statement that applies
          example: Copyright World Trade Organization
          type: string
        useAndReproductionStatement:
          description: The human readable use and reproduction statement that applies
          example: Property rights reside with the repository. Literary rights reside with the creators of the documents or their heirs. To obtain permission to publish or reproduce, please contact the Public Services Librarian of the Dept. of Special Collections (http://library.stanford.edu/spc).
          type: string
        embargo:
          $ref: '#/components/schemas/Embargo'
    DROStructural:
      description: Structural metadata
      type: object
      properties:
        contains:
          description: Filesets that contain the digital representations (Files)
          type: array
          items:
            $ref: '#/components/schemas/FileSet'
        hasMemberOrders:
          description: Provided sequences or orderings of members, including some metadata about each sequence (i.e. sequence label, sequence type, if the sequence is primary, etc.).
          type: array
          items:
            $ref: '#/components/schemas/Sequence'
        isMemberOf:
          $ref: '#/components/schemas/Druid'
        hasAgreement:
          description: Agreement that covers the deposit of the DRO into SDR.
          type: string
    Druid:
      type: string
      pattern: '^druid:[b-df-hjkmnp-tv-z]{2}[0-9]{3}[b-df-hjkmnp-tv-z]{2}[0-9]{4}$'
      example: 'druid:bc123df4567'
    Embargo:
      type: object
      properties:
        releaseDate:
          description: Date when the Collection is released from an embargo.
          type: string
          format: date-time
          example: '2029-06-22T07:00:00.000+00:00'
        access:
          description: Access level that applies when embargo expires.
          type: string
          enum:
            - world
            - stanford
            - location-based
            - citation-only
            - dark
        useAndReproductionStatement:
          description: The human readable use and reproduction statement that applies when the embargo expires.
          example: These materials are in the public domain.
          type: string
      required:
        - releaseDate
        - access
    File:
      description: Binaries that are the basis of what our domain manages. Binaries here do not include metadata files generated for the domain's own management purposes.
      type: object
      properties:
        type:
          description: The content type of the File.
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/file.jsonld'
        externalIdentifier:
          description: Identifier for the resource within the SDR architecture but outside of the repository. UUID. Constant across resource versions. What clients will use calling the repository.
          type: string
        label:
          description: Primary processing label (can be same as title) for a File.
          type: string
        filename:
          description: Filename for a file. Can be same as label.
          type: string
        size:
          description: Size of the File (binary) in bytes.
          type: integer
        version:
          description: Version for the File within SDR.
          type: integer
        hasMimeType:
          description: MIME Type of the File.
          type: string
        use:
          description: Use for the File.
          type: string
        hasMessageDigests:
          type: array
          items:
            $ref: '#/components/schemas/MessageDigest'
        access:
          $ref: '#/components/schemas/Access'
        administrative:
          $ref: '#/components/schemas/FileAdministrative'
        presentation:
          $ref: '#/components/schemas/Presentation'
      required:
        - externalIdentifier
        - label
        - type
        - version
        - access
        - administrative
        - hasMessageDigests
    FileAdministrative:
      type: object
      properties:
        sdrPreserve:
          type: boolean
          default: true
        shelve:
          type: boolean
          default: false
      required:
        - sdrPreserve
        - shelve
    FileSet:
      description: Relevant groupings of Files. Also called a File Grouping.
      type: object
      properties:
        type:
          description: The content type of the Fileset.
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/fileset.jsonld'
        externalIdentifier:
          type: string
        label:
          description: Primary processing label for a Fileset.
          type: string
        version:
          description: Version for the Fileset within SDR.
          type: integer
        structural:
          $ref: '#/components/schemas/FileSetStructural'
      required:
        - externalIdentifier
        - label
        - type
        - version
    FileSetStructural:
      description: Structural metadata
      type: object
      properties:
        contains:
          type: array
          items:
            $ref: '#/components/schemas/File'
    Geographic:
      description: Geographic metadata
      type: object
      properties:
        iso19139:
          description: Geographic ISO 19139 XML metadata
          type: string
      required:
        - iso19139
    Identification:
      type: object
      properties:
        sourceId:
          type: string
          example: 'sul:PC0170_s3_Fiesta_Bowl_2012-01-02_210609_2026'
        catalogLinks:
          type: array
          items:
            $ref: '#/components/schemas/CatalogLink'
    MessageDigest:
      description: The output of the message digest algorithm.
      type: object
      properties:
        type:
          description: The algorithm that was used
          type: string
          enum:
            - md5
            - sha1
        digest:
          description: The digest value Base64 encoded
          type: string
      required:
        - type
        - digest
    Presentation:
      description: Presentation data for the File.
      type: object
      properties:
        height:
          description: Height in pixels
          type: integer
        width:
          description: Width in pixels
          type: integer
    ReleaseTag:
      description: A tag that indicates the item or collection should be released.
      type: object
      required:
        - release
      properties:
        who:
          description: Who did this release
          type: string
          example: petucket
        what:
          description: What is being released. This item or the whole collection.
          type: string
          enum:
            - self
            - collection
          example: self
        date:
          description: When did this action happen
          type: string
          format: date-time
        to:
          description: What platform is it released to
          type: string
          example: Searchworks
        release:
          type: boolean
    RequestAdminPolicy:
      description: Same as an AdminPolicy, but doesn't have an externalIdentifier as one will be created
      type: object
      properties:
        type:
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/admin_policy.jsonld'
          example: item
        label:
          type: string
        version:
          type: integer
        administrative:
          $ref: '#/components/schemas/AdminPolicyAdministrative'
        description:
          $ref: '#/components/schemas/Description'
      required:
        - label
        - type
        - version
        - administrative
    RequestCollection:
      description: Same as a Collection, but doesn't have an externalIdentifier as one will be created
      type: object
      properties:
        type:
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/collection.jsonld'
            - 'http://cocina.sul.stanford.edu/models/curated-collection.jsonld'
            - 'http://cocina.sul.stanford.edu/models/user-collection.jsonld'
            - 'http://cocina.sul.stanford.edu/models/exhibit.jsonld'
            - 'http://cocina.sul.stanford.edu/models/series.jsonld'
          example: item
        label:
          type: string
        version:
          type: integer
        access:
          $ref: '#/components/schemas/Access'
        administrative:
          $ref: '#/components/schemas/Administrative'
        description:
          $ref: '#/components/schemas/Description'
        identification:
          $ref: '#/components/schemas/CollectionIdentification'
      required:
        - label
        - type
        - version
        - access
    RequestDRO:
      description: Same as a DRO, but doesn't have an externalIdentifier as one will be created
      type: object
      properties:
        type:
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/object.jsonld'
            - 'http://cocina.sul.stanford.edu/models/3d.jsonld'
            - 'http://cocina.sul.stanford.edu/models/agreement.jsonld'
            - 'http://cocina.sul.stanford.edu/models/book.jsonld'
            - 'http://cocina.sul.stanford.edu/models/document.jsonld'
            - 'http://cocina.sul.stanford.edu/models/geo.jsonld'
            - 'http://cocina.sul.stanford.edu/models/image.jsonld'
            - 'http://cocina.sul.stanford.edu/models/page.jsonld'
            - 'http://cocina.sul.stanford.edu/models/photograph.jsonld'
            - 'http://cocina.sul.stanford.edu/models/manuscript.jsonld'
            - 'http://cocina.sul.stanford.edu/models/map.jsonld'
            - 'http://cocina.sul.stanford.edu/models/media.jsonld'
            - 'http://cocina.sul.stanford.edu/models/track.jsonld'
            - 'http://cocina.sul.stanford.edu/models/webarchive-binary.jsonld'
            - 'http://cocina.sul.stanford.edu/models/webarchive-seed.jsonld'
          example: item
        label:
          type: string
        version:
          type: integer
        access:
          $ref: '#/components/schemas/DROAccess'
        administrative:
          $ref: '#/components/schemas/Administrative'
        description:
          $ref: '#/components/schemas/Description'
        identification:
          $ref: '#/components/schemas/Identification'
        structural:
          $ref: '#/components/schemas/RequestDROStructural'
        geographic:
          $ref: '#/components/schemas/Geographic'
      required:
        - label
        - type
        - version
        - access
    RequestDROStructural:
      description: Structural metadata
      type: object
      properties:
        contains:
          type: array
          items:
            $ref: '#/components/schemas/RequestFileSet'
        hasMemberOrders:
          type: array
          items:
            $ref: '#/components/schemas/Sequence'
        isMemberOf:
          $ref: '#/components/schemas/Druid'
        hasAgreement:
          type: string
    RequestFile:
      type: object
      properties:
        type:
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/file.jsonld'
        label:
          type: string
        filename:
          type: string
        size:
          type: integer
        version:
          type: integer
        hasMimeType:
          type: string
        externalIdentifier:
          type: string
        use:
          type: string
        hasMessageDigests:
          type: array
          items:
            $ref: '#/components/schemas/MessageDigest'
        access:
          $ref: '#/components/schemas/Access'
        administrative:
          $ref: '#/components/schemas/FileAdministrative'
        presentation:
          $ref: '#/components/schemas/Presentation'
      required:
        - label
        - type
        - version
        - filename
        - access
        - administrative
        - hasMessageDigests
    RequestFileSet:
      type: object
      properties:
        type:
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/fileset.jsonld'
        label:
          type: string
        version:
          type: integer
        structural:
          $ref: '#/components/schemas/RequestFileSetStructural'
      required:
        - label
        - type
        - version
        - structural
    RequestFileSetStructural:
      description: Structural metadata
      type: object
      properties:
        contains:
          type: array
          items:
            $ref: '#/components/schemas/RequestFile'
    Sequence:
      description: A sequence or ordering of resources within a Collection or Object.
      type: object
      properties:
        viewingDirection:
          description: The direction that a sequence of canvases should be displayed to the user
          type: string
          enum:
            - right-to-left
            - left-to-right
    Title:
      description: The title of the object.
      type: object
      properties:
        primary:
          description: Is this the primary title for the object
          type: boolean
        titleFull:
          description: The full title for the object
          type: string
      required:
        - primary
        - titleFull

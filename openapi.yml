openapi: 3.0.0
info:
  description: Specification for Cocina Models
  version: 1.0.0
  title: Cocina Models
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /v1/noop:
    get:
      summary: noop
      responses:
        '200':
          description: noop
components:
  schemas:
    Access:
      type: object
      properties:
        access:
          type: string
          enum:
            - 'world'
            - 'stanford'
            - 'location-based'
            - 'citation-only'
            - 'dark'
          default: 'dark'
        copyright:
          description: The human readable copyright statement that applies
          example: Copyright World Trade Organization
          type: string
        useAndReproductionStatement:
          description: The human readable use and reproduction statement that applies
          example: Property rights reside with the repository. Literary rights reside with the creators of the documents or their heirs. To obtain permission to publish or reproduce, please contact the Public Services Librarian of the Dept. of Special Collections (http://library.stanford.edu/spc).
          type: string
        embargo:
          $ref: '#/components/schemas/Embargo'
    Administrative:
      type: object
      properties:
        hasAdminPolicy:
          $ref: '#/components/schemas/Druid'
        releaseTags:
          type: array
          items:
            $ref: '#/components/schemas/ReleaseTag'
        partOfProject:
          description: Administrative or Internal project this resource is a part of
          example: Google Books
          type: string
      required:
        - releaseTags
    AdminPolicy:
      type: object
      properties:
        type:
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/admin_policy.jsonld'
          example: item
        externalIdentifier:
          $ref: '#/components/schemas/Druid'
        label:
          type: string
        version:
          type: integer
        access:
          $ref: '#/components/schemas/AdminPolicyAccess'
        administrative:
          $ref: '#/components/schemas/AdminPolicyAdministrative'
        identification:
          $ref: '#/components/schemas/AdminPolicyIdentification'
        structural:
          $ref: '#/components/schemas/AdminPolicyStructural'
        description:
          $ref: '#/components/schemas/Description'
      required:
        - externalIdentifier
        - label
        - type
        - version
        - access
        - administrative
        - identification
        - structural
    AdminPolicyAccess:
      type: object
    AdminPolicyAdministrative:
      type: object
      required:
        - defaultObjectRights
      properties:
        defaultObjectRights:
          type: string
          default: <?xml version="1.0" encoding="UTF-8"?><rightsMetadata><access type="discover"><machine><world/></machine></access><access type="read"><machine><world/></machine></access><use><human type="useAndReproduction"/><human type="creativeCommons"/><machine type="creativeCommons" uri=""/><human type="openDataCommons"/><machine type="openDataCommons" uri=""/></use><copyright><human/></copyright></rightsMetadata>
        registrationWorkflow:
          type: string
        hasAdminPolicy:
          type: string
    AdminPolicyIdentification:
      type: object
    AdminPolicyStructural:
      type: object
    CatalogLink:
      type: object
      required:
        - catalog
        - catalogRecordId
      properties:
        catalog:
          type: string
          example: symphony
        catalogRecordId:
          type: string
          example: 11403803
    Collection:
      type: object
      properties:
        type:
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/collection.jsonld'
            - 'http://cocina.sul.stanford.edu/models/curated-collection.jsonld'
            - 'http://cocina.sul.stanford.edu/models/user-collection.jsonld'
            - 'http://cocina.sul.stanford.edu/models/exhibit.jsonld'
            - 'http://cocina.sul.stanford.edu/models/series.jsonld'
          example: item
        externalIdentifier:
          $ref: '#/components/schemas/Druid'
        label:
          type: string
        version:
          type: integer
        access:
          $ref: '#/components/schemas/Access'
        administrative:
          $ref: '#/components/schemas/Administrative'
        description:
          $ref: '#/components/schemas/Description'
        identification:
          $ref: '#/components/schemas/CollectionIdentification'
        structural:
          $ref: '#/components/schemas/CollectionStructural'
      required:
        - externalIdentifier
        - label
        - type
        - version
        - access
        - administrative
        - identification
        - structural
    CollectionIdentification:
      type: object
      properties:
        catalogLinks:
          type: array
          items:
            $ref: '#/components/schemas/CatalogLink'
    CollectionStructural:
      type: object
      properties: {}
    Description:
      type: object
      properties:
        title:
          description: Titles of the resource.
          type: array
          minItems: 1
          items:
            allOf:
            - $ref: "#/components/schemas/value"
            - anyOf:
              - required:
                - value
              - required:
                - structuredValue
        contributor:
          description: Agents contributing in some way to the creation and history of the
            resource.
          type: array
          items:
            $ref: "#/components/schemas/contributor"
        event:
          description: Events in the history of the resource.
          type: array
          items:
            $ref: "#/components/schemas/event"
        form:
          description: Characteristics of the resource's physical, digital, and intellectual
            form and genre.
          type: array
          items:
            $ref: "#/components/schemas/value"
        language:
          description: Languages, scripts, and notations used in all or part of a resource.
          type: array
          items:
            $ref: "#/components/schemas/value"
        note:
          description: Additional information relevant to a resource.
          type: array
          items:
            $ref: "#/components/schemas/value"
        identifier:
          description: Unique strings associated with the resource.
          type: array
          items:
            $ref: "#/components/schemas/value"
        purl:
          description: Stanford persistent URL associated with the resource.
          type: string
          format: uri
        url:
          description: URLs where the resource may be accessed in full or part.
          type: array
          items:
            $ref: "#/components/schemas/value"
        marcEncodedData:
          description: Data about the resource represented in MARC fixed fields and codes.
          type: array
          items:
            $ref: "#/components/schemas/value"
        adminMetadata:
          description: Information about this description of the resource.
          type: object
          allOf:
          - $ref: "#/components/schemas/event"
          - $ref: "#/components/schemas/contributor"
          - properties:
              language:
                $ref: "#/components/schemas/value"
              note:
                $ref: "#/components/schemas/value"
      required:
        - title
    DRO:
      type: object
      properties:
        type:
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/object.jsonld'
            - 'http://cocina.sul.stanford.edu/models/3d.jsonld'
            - 'http://cocina.sul.stanford.edu/models/agreement.jsonld'
            - 'http://cocina.sul.stanford.edu/models/book.jsonld'
            - 'http://cocina.sul.stanford.edu/models/document.jsonld'
            - 'http://cocina.sul.stanford.edu/models/geo.jsonld'
            - 'http://cocina.sul.stanford.edu/models/image.jsonld'
            - 'http://cocina.sul.stanford.edu/models/page.jsonld'
            - 'http://cocina.sul.stanford.edu/models/photograph.jsonld'
            - 'http://cocina.sul.stanford.edu/models/manuscript.jsonld'
            - 'http://cocina.sul.stanford.edu/models/map.jsonld'
            - 'http://cocina.sul.stanford.edu/models/media.jsonld'
            - 'http://cocina.sul.stanford.edu/models/track.jsonld'
            - 'http://cocina.sul.stanford.edu/models/webarchive-binary.jsonld'
            - 'http://cocina.sul.stanford.edu/models/webarchive-seed.jsonld'
          example: item
        externalIdentifier:
          $ref: '#/components/schemas/Druid'
        label:
          type: string
        version:
          type: integer
        access:
          $ref: '#/components/schemas/Access'
        administrative:
          $ref: '#/components/schemas/Administrative'
        description:
          $ref: '#/components/schemas/Description'
        identification:
          $ref: '#/components/schemas/Identification'
        structural:
          $ref: '#/components/schemas/DROStructural'
        geographic:
          $ref: '#/components/schemas/Geographic'
      required:
        - externalIdentifier
        - label
        - type
        - version
        - access
        - administrative
        - identification
        - structural
    DROStructural:
      type: object
      properties:
        contains:
          type: array
          items:
            $ref: '#/components/schemas/FileSet'
        hasMemberOrders:
          type: array
          items:
            $ref: '#/components/schemas/Sequence'
        isMemberOf:
          $ref: '#/components/schemas/Druid'
        hasAgreement:
          type: string
    Druid:
      type: string
      pattern: '^druid:[b-df-hjkmnp-tv-z]{2}[0-9]{3}[b-df-hjkmnp-tv-z]{2}[0-9]{4}$'
      example: 'druid:bc123df4567'
    Embargo:
      type: object
      properties:
        releaseDate:
          type: string
          format: date-time
          example: '2029-06-22T07:00:00.000+00:00'
        access:
          type: string
          enum:
            - world
            - stanford
            - location-based
            - citation-only
            - dark
        useAndReproductionStatement:
          description: The human readable use and reproduction statement that applies when the embargo expires.
          example: These materials are in the public domain.
          type: string
      required:
        - releaseDate
        - access
    File:
      type: object
      properties:
        type:
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/file.jsonld'
        externalIdentifier:
          type: string
        label:
          type: string
        filename:
          type: string
        size:
          type: integer
        version:
          type: integer
        hasMimeType:
          type: string
        use:
          type: string
        hasMessageDigests:
          type: array
          items:
            $ref: '#/components/schemas/MessageDigest'
        access:
          $ref: '#/components/schemas/Access'
        administrative:
          $ref: '#/components/schemas/FileAdministrative'
        identification:
          $ref: '#/components/schemas/FileIdentification'
        structural:
          $ref: '#/components/schemas/FileStructural'
        presentation:
          $ref: '#/components/schemas/Presentation'
      required:
        - externalIdentifier
        - label
        - type
        - version
        - access
        - structural
        - administrative
        - hasMessageDigests
    FileAdministrative:
      type: object
      properties:
        sdrPreserve:
          type: boolean
          default: true
        shelve:
          type: boolean
          default: false
      required:
        - sdrPreserve
        - shelve
    FileIdentification:
      type: object
    FileSet:
      type: object
      properties:
        type:
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/fileset.jsonld'
        externalIdentifier:
          type: string
        label:
          type: string
        version:
          type: integer
        access:
          $ref: '#/components/schemas/Access'
        identification:
          $ref: '#/components/schemas/FileSetIdentification'
        structural:
          $ref: '#/components/schemas/FileSetStructural'
      required:
        - externalIdentifier
        - label
        - type
        - version
        - access
        - identification
        - structural
    FileSetIdentification:
      type: object
    FileSetStructural:
      type: object
      properties:
        contains:
          type: array
          items:
            $ref: '#/components/schemas/File'
    FileStructural:
      type: object
      properties: {}
    Geographic:
      type: object
      properties:
        iso19139:
          type: string
      required:
        - iso19139
    Identification:
      type: object
      properties:
        sourceId:
          type: string
          example: 'sul:PC0170_s3_Fiesta_Bowl_2012-01-02_210609_2026'
        catalogLinks:
          type: array
          items:
            $ref: '#/components/schemas/CatalogLink'
    MessageDigest:
      description: The output of the message digest algorithm.
      type: object
      properties:
        type:
          description: The algorithm that was used
          type: string
          enum:
            - md5
            - sha1
        digest:
          description: The digest value Base64 encoded
          type: string
      required:
        - type
        - digest
    Presentation:
      type: object
      properties:
        height:
          type: integer
        width:
          type: integer
    ReleaseTag:
      type: object
      required:
        - release
      properties:
        who:
          type: string
          example: petucket
        what:
          type: string
          enum:
            - self
            - collection
          example: self
        date:
          type: string
          format: date-time
        to:
          type: string
          example: Searchworks
        release:
          type: boolean
    RequestAdminPolicy:
      description: Same as an AdminPolicy, but doesn't have an externalIdentifier as one will be created
      type: object
      properties:
        type:
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/admin_policy.jsonld'
          example: item
        label:
          type: string
        version:
          type: integer
        access:
          $ref: '#/components/schemas/AdminPolicyAccess'
        administrative:
          $ref: '#/components/schemas/AdminPolicyAdministrative'
        identification:
          $ref: '#/components/schemas/AdminPolicyIdentification'
        structural:
          $ref: '#/components/schemas/AdminPolicyStructural'
        description:
          $ref: '#/components/schemas/Description'
      required:
        - label
        - type
        - version
        - access
        - administrative
        - identification
        - structural
    RequestCollection:
      description: Same as a Collection, but doesn't have an externalIdentifier as one will be created
      type: object
      properties:
        type:
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/collection.jsonld'
            - 'http://cocina.sul.stanford.edu/models/curated-collection.jsonld'
            - 'http://cocina.sul.stanford.edu/models/user-collection.jsonld'
            - 'http://cocina.sul.stanford.edu/models/exhibit.jsonld'
            - 'http://cocina.sul.stanford.edu/models/series.jsonld'
          example: item
        label:
          type: string
        version:
          type: integer
        access:
          $ref: '#/components/schemas/Access'
        administrative:
          $ref: '#/components/schemas/Administrative'
        description:
          $ref: '#/components/schemas/Description'
        identification:
          $ref: '#/components/schemas/CollectionIdentification'
        structural:
          $ref: '#/components/schemas/CollectionStructural'
      required:
        - label
        - type
        - version
        - access
        - administrative
        - structural
        - identification
    RequestDRO:
      description: Same as a DRO, but doesn't have an externalIdentifier as one will be created
      type: object
      properties:
        type:
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/object.jsonld'
            - 'http://cocina.sul.stanford.edu/models/3d.jsonld'
            - 'http://cocina.sul.stanford.edu/models/agreement.jsonld'
            - 'http://cocina.sul.stanford.edu/models/book.jsonld'
            - 'http://cocina.sul.stanford.edu/models/document.jsonld'
            - 'http://cocina.sul.stanford.edu/models/geo.jsonld'
            - 'http://cocina.sul.stanford.edu/models/image.jsonld'
            - 'http://cocina.sul.stanford.edu/models/page.jsonld'
            - 'http://cocina.sul.stanford.edu/models/photograph.jsonld'
            - 'http://cocina.sul.stanford.edu/models/manuscript.jsonld'
            - 'http://cocina.sul.stanford.edu/models/map.jsonld'
            - 'http://cocina.sul.stanford.edu/models/media.jsonld'
            - 'http://cocina.sul.stanford.edu/models/track.jsonld'
            - 'http://cocina.sul.stanford.edu/models/webarchive-binary.jsonld'
            - 'http://cocina.sul.stanford.edu/models/webarchive-seed.jsonld'
          example: item
        label:
          type: string
        version:
          type: integer
        access:
          $ref: '#/components/schemas/Access'
        administrative:
          $ref: '#/components/schemas/Administrative'
        description:
          $ref: '#/components/schemas/Description'
        identification:
          $ref: '#/components/schemas/Identification'
        structural:
          $ref: '#/components/schemas/RequestDROStructural'
        geographic:
          $ref: '#/components/schemas/Geographic'
      required:
        - label
        - type
        - version
        - access
        - administrative
        - identification
        - structural
    RequestDROStructural:
      type: object
      properties:
        contains:
          type: array
          items:
            $ref: '#/components/schemas/RequestFileSet'
        hasMemberOrders:
          type: array
          items:
            $ref: '#/components/schemas/Sequence'
        isMemberOf:
          $ref: '#/components/schemas/Druid'
        hasAgreement:
          type: string
    RequestFile:
      type: object
      properties:
        type:
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/file.jsonld'
        label:
          type: string
        filename:
          type: string
        size:
          type: integer
        version:
          type: integer
        hasMimeType:
          type: string
        externalIdentifier:
          type: string
        use:
          type: string
        hasMessageDigests:
          type: array
          items:
            $ref: '#/components/schemas/MessageDigest'
        access:
          $ref: '#/components/schemas/Access'
        administrative:
          $ref: '#/components/schemas/FileAdministrative'
        identification:
          $ref: '#/components/schemas/FileIdentification'
        structural:
          $ref: '#/components/schemas/FileStructural'
        presentation:
          $ref: '#/components/schemas/Presentation'
      required:
        - label
        - type
        - version
        - filename
        - access
        - administrative
        - hasMessageDigests
    RequestFileSet:
      type: object
      properties:
        type:
          type: string
          enum:
            - 'http://cocina.sul.stanford.edu/models/fileset.jsonld'
        label:
          type: string
        version:
          type: integer
        access:
          $ref: '#/components/schemas/Access'
        identification:
          $ref: '#/components/schemas/FileSetIdentification'
        structural:
          $ref: '#/components/schemas/RequestFileSetStructural'
      required:
        - label
        - type
        - version
        - structural
        - identification
    RequestFileSetStructural:
      type: object
      properties:
        contains:
          type: array
          items:
            $ref: '#/components/schemas/RequestFile'
    Sequence:
      type: object
      properties:
        viewingDirection:
          type: string
          enum:
            - right-to-left
            - left-to-right
    Title:
      type: object
      properties:
        primary:
          type: boolean
        titleFull:
          type: string
      required:
        - primary
        - titleFull
    value:
      description: Default value model for descriptive elements.
      type: object
      allOf:
      - $ref: "#/components/schemas/basicValue"
      - $ref: "#/components/schemas/structuredValue"
      - $ref: "#/components/schemas/appliesTo"
    basicValue:
      description: Value model for descriptive elements without recursive properties.
      type: object
      properties:
        value:
          description: String value of the descriptive element.
          type: string
        type:
          description: Type of value provided by the descriptive element.
          type: string
        status:
          description: Status of the descriptive element relative to other instances
            of the element.
          type: string
        code:
          description: Code value of the descriptive element.
          type: string
        URI:
          description: URI value of the descriptive element.
          type: string
          format: uri
        standard:
          description: Descriptive or content standard to which the value conforms.
          type: array
          items:
            type: string
        encoding:
          description: Encoding schema, standard, or syntax to which the value conforms.
          type: array
          items:
            type: string
        source:
          $ref: "#/components/schemas/source"
    structuredValue:
      description: Value model for descriptive elements structured as typed values.
      type: object
      properties:
        structuredValue:
          type: array
          items:
            $ref: "#/components/schemas/basicValue"
    appliesTo:
      description: Property model for indicating the parts, aspects, or versions of
        the resource to which a descriptive element is applicable.
      type: object
      properties:
        appliesTo:
          type: array
          items:
            $ref: "#/components/schemas/basicValue"
    source:
      description: Property model for indicating the vocabulary, authority, or other
        origin for a term, code, or identifier.
      type: object
      properties:
        code:
          description: Code representing the value source.
          type: string
        URI:
          description: URI for the value source.
          type: string
          format: uri
        value:
          description: String describing the value source.
          type: string
    contributor:
      description: Property model for describing agents contributing in some way to
        the creation and history of the resource
      type: object
      properties:
        name:
          description: Names associated with a contributor.
          type: array
          items:
            $ref: "#/components/schemas/value"
        type:
          description: Entity type of the contributor (person, organization, etc.).
          type: string
        status:
          description: Status of the contributor relative to other parallel contributors.
          type: string
        role:
          description: Relationships of the contributor to the resource or to an event
            in its history.
          type: array
          items:
            $ref: "#/components/schemas/value"
    event:
      description: Property model for describing events in the history of the resource.
      type: object
      properties:
        type:
          description: Description of the event (creation, publication, etc.).
          type: string
        date:
          description: Dates associated with the event.
          type: array
          items:
            $ref: "#/components/schemas/value"
        contributor:
          description: Contributors associated with the event.
          type: array
          items:
            $ref: "#/components/schemas/contributor"
        location:
          description: Locations associated with the event.
          type: array
          items:
            $ref: "#/components/schemas/value"
        note:
          description: Other information about the event.
          type: array
          items:
            $ref: "#/components/schemas/value"
        structuredValue:
          description: Structured information about the event (such as the parts of
            a publication statement).
          type: array
          items:
            $ref: "#/components/schemas/structuredValue"
